name: Extract Windev Code

on:
  push:
    paths:
      - '**.wdw'
      - '**.wdc'
      - 'scripts/**'
  workflow_dispatch:

jobs:
  extract-windev-code:
    runs-on: windows-latest  # N√©cessaire pour PowerShell (et √©ventuellement WinDev si local)

    steps:
      - name: üßæ Cloner le d√©p√¥t
        uses: actions/checkout@v4

      - name: üõ†Ô∏è Installer .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: üì¶ Restaurer et compiler le projet d'extraction
        run: dotnet build scripts/ExtractCode.csproj --configuration Release

      - name: Extraire le code des fichiers .wdw et .wdc
        run: |
          $files = Get-ChildItem -Path . -Include *.wdw, *.wdc -Recurse
          foreach ($file in $files) {
            $inputPath = $file.FullName
            $baseName = [System.IO.Path]::GetFileNameWithoutExtension($file.Name)
            $outputFolder = if ($file.Extension -eq ".wdw") { "extracted_code/fenetres" } else { "extracted_code/classes" }
            mkdir $outputFolder -Force
            dotnet run --project scripts/ExtractCode.csproj $inputPath $outputFolder
          }
        shell: pwsh


      - name: ‚öôÔ∏è Configurer Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: ‚úÖ Commit & push si changements
        run: |
          git add extracted-code/**/*.txt
          git diff --cached --quiet || git commit -m "üîÑ Mise √† jour automatique du code extrait WinDev [CI]"
          git push
        continue-on-error: true


